private bool IsResetPasswordLinkVerified(string token)
{
    var usertokenData = _db.User_ResetPassword_Tokens.FirstOrDefault(x => x.Token == token);
    return true;
    //return usertokenData.IsVerified;
}

private void IsResetPasswordMultipleLink(string email)
{
    var usertokenData = _db.User_ResetPassword_Tokens.Where(x => x.EmailId == email).OrderByDescending(x=>x.CreatedDateTime).Skip(1).ToList();
    usertokenData.ForEach(x => { x.IsExpired = true; x.IsVerified = true; });
    _db.SaveChanges();
   
}
private void currentLinkVerified(string token)// after all work done
{
    var usertokenData = _db.User_ResetPassword_Tokens.FirstOrDefault(x => x.Token == token);
    usertokenData.IsVerified = true;
    usertokenData.IsExpired = true;
    _db.SaveChanges();
}

 private bool IsResetPasswordLinkExpired(string token)
 {
     var usertokenData = _db.User_ResetPassword_Tokens.FirstOrDefault(x=>x.Token== token);
     DateTime currentTime= DateTime.Now;
     int timeDiffrence = (currentTime - usertokenData.CreatedDateTime).Minutes;
     if(timeDiffrence>3) 
     {
         usertokenData.IsExpired= true;
         _db.SaveChanges();
         return true;
     }
     return false;
 }
